// <auto-generated />
using System;
using GeciciTSweb.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GeciciTSweb.Infrastructure.Migrations
{
    [DbContext(typeof(GeciciTSwebDbContext))]
    [Migration("20250813221142_RPNTypeDegisti")]
    partial class RPNTypeDegisti
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.Companies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.Console", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Consoles");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.MaintenanceRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("EquipmentNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Fluid")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NotificationNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Pressure")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TempMaintenanceTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Temperature")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TempMaintenanceTypeId");

                    b.HasIndex("UnitId");

                    b.ToTable("MaintenanceRequests");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.RiskAssessment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ApprovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ApprovedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CancelReasonCode")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CancelReasonText")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentImpact")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentProbability")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentRPN")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentCode")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentReportNote")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DepartmentStatus")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MaintenanceRequestId")
                        .HasColumnType("int");

                    b.Property<string>("OperationalRiskNote")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("PlannedPermanentRepairDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlannedTemporaryRepairDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ResidualImpact")
                        .HasColumnType("int");

                    b.Property<int?>("ResidualProbability")
                        .HasColumnType("int");

                    b.Property<int?>("ResidualRPN")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int");

                    b.Property<string>("ReturnReasonCode")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ReturnReasonText")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RiskCategoryCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MaintenanceRequestId");

                    b.ToTable("RiskAssessments");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.TemporaryMaintenanceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TemporaryMaintenanceTypes");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ConsoleId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConsoleId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.Console", b =>
                {
                    b.HasOne("GeciciTSweb.Infrastructure.Entities.Companies", "Company")
                        .WithMany("Consoles")
                        .HasForeignKey("CompanyId")
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.MaintenanceRequest", b =>
                {
                    b.HasOne("GeciciTSweb.Infrastructure.Entities.TemporaryMaintenanceType", "TempMaintenanceType")
                        .WithMany("MaintenanceRequests")
                        .HasForeignKey("TempMaintenanceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GeciciTSweb.Infrastructure.Entities.Unit", "Unit")
                        .WithMany("MaintenanceRequests")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TempMaintenanceType");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.RiskAssessment", b =>
                {
                    b.HasOne("GeciciTSweb.Infrastructure.Entities.MaintenanceRequest", "MaintenanceRequest")
                        .WithMany("RiskAssessment")
                        .HasForeignKey("MaintenanceRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaintenanceRequest");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.Unit", b =>
                {
                    b.HasOne("GeciciTSweb.Infrastructure.Entities.Console", "Console")
                        .WithMany("Units")
                        .HasForeignKey("ConsoleId");

                    b.Navigation("Console");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.Companies", b =>
                {
                    b.Navigation("Consoles");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.Console", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.MaintenanceRequest", b =>
                {
                    b.Navigation("RiskAssessment");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.TemporaryMaintenanceType", b =>
                {
                    b.Navigation("MaintenanceRequests");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.Unit", b =>
                {
                    b.Navigation("MaintenanceRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
