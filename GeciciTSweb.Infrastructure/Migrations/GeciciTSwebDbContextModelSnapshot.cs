// <auto-generated />
using System;
using GeciciTSweb.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GeciciTSweb.Infrastructure.Migrations
{
    [DbContext(typeof(GeciciTSwebDbContext))]
    partial class GeciciTSwebDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Companie__3214EC073959A46A");

                    b.HasIndex(new[] { "Name" }, "UQ__Companie__737584F6CA932090")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.Console", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Consoles__3214EC07A63A1752");

                    b.HasIndex("CompanyId");

                    b.ToTable("Consoles");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Departme__3214EC07A2A86B95");

                    b.HasIndex(new[] { "Name" }, "UQ__Departme__737584F6406427AA")
                        .IsUnique();

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.MaintenanceRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BildirimNumarasi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("EquipmentNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Fluid")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Pressure")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TempMaintenanceTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Temperature")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Maintena__3214EC078FF3FC46");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("TempMaintenanceTypeId");

                    b.HasIndex(new[] { "Status" }, "IX_MaintenanceRequests_Status");

                    b.HasIndex(new[] { "UnitId" }, "IX_MaintenanceRequests_UnitId");

                    b.ToTable("MaintenanceRequests");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.RequestLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorUserId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LogType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaintenanceRequestId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__RequestL__3214EC07D80ED5FE");

                    b.HasIndex("AuthorUserId");

                    b.HasIndex(new[] { "MaintenanceRequestId" }, "IX_RequestLogs_MaintenanceRequestId");

                    b.ToTable("RequestLogs");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Roles__3214EC077D37D0F8");

                    b.HasIndex(new[] { "Name" }, "UQ__Roles__737584F681DB7990")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.TemporaryMaintenanceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Temporar__3214EC07F1735B53");

                    b.HasIndex(new[] { "Name" }, "UQ__Temporar__737584F6F5DC19E1")
                        .IsUnique();

                    b.ToTable("TemporaryMaintenanceTypes");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConsoleId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Units__3214EC071FDEC016");

                    b.HasIndex("ConsoleId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KeycloakUserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC07FFC1274F");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "KeycloakUserId" }, "UQ__Users__DB57BA592BBC46D2")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.Console", b =>
                {
                    b.HasOne("GeciciTSweb.Infrastructure.Entities.Company", "Company")
                        .WithMany("Consoles")
                        .HasForeignKey("CompanyId")
                        .IsRequired()
                        .HasConstraintName("FK_Consoles_Companies");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.MaintenanceRequest", b =>
                {
                    b.HasOne("GeciciTSweb.Infrastructure.Entities.User", "CreatedByUser")
                        .WithMany("MaintenanceRequests")
                        .HasForeignKey("CreatedByUserId")
                        .IsRequired()
                        .HasConstraintName("FK_Requests_Users");

                    b.HasOne("GeciciTSweb.Infrastructure.Entities.TemporaryMaintenanceType", "TempMaintenanceType")
                        .WithMany("MaintenanceRequests")
                        .HasForeignKey("TempMaintenanceTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_Requests_TempTypes");

                    b.HasOne("GeciciTSweb.Infrastructure.Entities.Unit", "Unit")
                        .WithMany("MaintenanceRequests")
                        .HasForeignKey("UnitId")
                        .IsRequired()
                        .HasConstraintName("FK_Requests_Units");

                    b.Navigation("CreatedByUser");

                    b.Navigation("TempMaintenanceType");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.RequestLog", b =>
                {
                    b.HasOne("GeciciTSweb.Infrastructure.Entities.User", "AuthorUser")
                        .WithMany("RequestLogs")
                        .HasForeignKey("AuthorUserId")
                        .IsRequired()
                        .HasConstraintName("FK_Logs_Users");

                    b.HasOne("GeciciTSweb.Infrastructure.Entities.MaintenanceRequest", "MaintenanceRequest")
                        .WithMany("RequestLogs")
                        .HasForeignKey("MaintenanceRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Logs_Requests");

                    b.Navigation("AuthorUser");

                    b.Navigation("MaintenanceRequest");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.Unit", b =>
                {
                    b.HasOne("GeciciTSweb.Infrastructure.Entities.Console", "Console")
                        .WithMany("Units")
                        .HasForeignKey("ConsoleId")
                        .IsRequired()
                        .HasConstraintName("FK_Units_Consoles");

                    b.Navigation("Console");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.User", b =>
                {
                    b.HasOne("GeciciTSweb.Infrastructure.Entities.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Users_Departments");

                    b.HasOne("GeciciTSweb.Infrastructure.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_Users_Roles");

                    b.Navigation("Department");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.Company", b =>
                {
                    b.Navigation("Consoles");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.Console", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.Department", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.MaintenanceRequest", b =>
                {
                    b.Navigation("RequestLogs");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.TemporaryMaintenanceType", b =>
                {
                    b.Navigation("MaintenanceRequests");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.Unit", b =>
                {
                    b.Navigation("MaintenanceRequests");
                });

            modelBuilder.Entity("GeciciTSweb.Infrastructure.Entities.User", b =>
                {
                    b.Navigation("MaintenanceRequests");

                    b.Navigation("RequestLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
